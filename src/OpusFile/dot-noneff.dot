digraph {
    0 [label=0];
    1 [label=1];
    2 [label=2];
    3 [label=3];
    4 [label=4];
    5 [label=5];
    6 [label=6];
    7 [label=7];
    8 [label=8];
    9 [label=9];
    10 [label=10];
    11 [label=11];
    12 [label=12];
    13 [label=13];
    14 [label=14];
    15 [label=15];
    16 [label=16];
    17 [label=17];
    18 [label=18];
    19 [label=19];
    20 [label=20];
    21 [label=21];
    22 [label=22];
    23 [label=23];
    24 [label=24];
    25 [label=25];
    26 [label=26];
    27 [label=27];
    28 [label=28];
    29 [label=29];
    30 [label=30];
    31 [label=31];
    32 [label=32];
    33 [label=33];
    34 [label=34];
    35 [label=35];
    36 [label=36];
    37 [label=37];
    38 [label=38];
    39 [label=39];
    40 [label=40];
    41 [label=41];
    42 [label=42];
    43 [label=43];
    44 [label=44];
    45 [label=45];
    46 [label=46];
    47 [label=47];
    48 [label=48];
    49 [label=49];
    50 [label=50];
    51 [label=51];
    52 [label=52];
    53 [label=53];
    54 [label=54];
    55 [label=55];
    56 [label=56];
    57 [label=57];
    58 [label=58];
    59 [label=59];
    60 [label=60];
    61 [label=61];
    62 [label=62];
    63 [label=63];
    64 [label=64];
    65 [label=65];
    66 [label=66];
    67 [label=67];
    68 [label=68];
    69 [label=69];
    70 [label=70];
    71 [label=71];
    72 [label=72];
    73 [label=73];
    74 [label=74];
    75 [label=75];
    76 [label=76];
    77 [label=77];
    78 [label=78];
    79 [label=79];
    80 [label=80];
    81 [label=81];
    82 [label=82];
    83 [label=83];
    84 [label=84];
    85 [label=85];
    86 [label=86];
    87 [label=87];
    88 [label=88];
    89 [label=89];
    90 [label=90];
    91 [label=91];
    92 [label=92];
    93 [label=93];
    94 [label=94];
    95 [label=95];
    96 [label=96];
    97 [label=97];
    98 [label=98];
    99 [label=99];
    0 -> 1 [label="<update b0 = Anything>"];
    0 -> 14 [label="<p0 = malloc()>"];
    0 -> 20 [label="<update p0 = NULL>"];
    0 -> 39 [label="<update c0 = \"sample3.opus\">"];
    0 -> 96 [label="<update c0 = 'a'>"];
    0 -> 97 [label="<update c0 = 'b'>"];
    0 -> 98 [label="<update c0 = 'c'>"];
    1 -> 2 [label="<c1 = new_file_bytes(b0)>"];
    2 -> 3 [label="<p2 = new_c_string(c1)>"];
    3 -> 4 [label="<p3 = malloc()>"];
    4 -> 5 [label="<p4 = op_test_file(p2, p3)>"];
    5 -> 7 [label="<b5 = is_null_ptr(p4)>"];
    6 -> 8 [label="<c6 = op_test_open(p4)>"];
    6 -> 26 [label="<i6 = op_pcm_total(p4, -1)>"];
    6 -> 61 [label="<c6 = op_link_count(p4)>"];
    6 -> 95 [label="<update c6 = 'a'>"];
    7 -> 6 [label="<if !b5>"];
    8 -> 10 [label="<b7 = c6 == 0>"];
    9 -> 11 [label="<c8 = op_channel_count(p4, -1)>"];
    10 -> 9 [label="<assert b7>"];
    11 -> 12 [label="<assert ((2 == c8) || (3 == c8))>"];
    12 -> 13 [label="<u9 = op_free(p4)>"];
    14 -> 15 [label="<update c1 = Anything>"];
    15 -> 16 [label="<p2 = new_c_bytes(c1)>"];
    16 -> 17 [label="<i3 = c_bytes_len(c1)>"];
    17 -> 18 [label="<update c4 = (i3 as int)>"];
    18 -> 19 [label="<c5 = opus_tags_parse(p0, p2, c4)>"];
    20 -> 21 [label="<update c1 = Anything>"];
    20 -> 99 [label="<update c1 = 'd'>"];
    21 -> 22 [label="<p2 = new_c_bytes(c1)>"];
    22 -> 23 [label="<i3 = c_bytes_len(c1)>"];
    23 -> 24 [label="<update c4 = (i3 as int)>"];
    24 -> 25 [label="<c5 = opus_tags_parse(p0, p2, c4)>"];
    26 -> 27 [label="<c7 = op_channel_count(p4, -1)>"];
    27 -> 28 [label="<update i8 = (((i6 * (c7 as int)) * 2) as int)>"];
    28 -> 29 [label="<p9 = malloc_bytes(i8)>"];
    29 -> 30 [label="<update i10 = 0>"];
    30 -> 31 [label="<if (i10 == i6)>"];
    30 -> 32 [label="<if !(i10 == i6)>"];
    31 -> 33 [label="<c11 = op_read(p4, p9, ((i6 * (c7 as int)) as int), NULL)>"];
    32 -> 34 [label="<u13 = op_free(p4)>"];
    33 -> 35 [label="<if (c11 >= 0)>"];
    35 -> 36 [label="<update i10 = (i10 + (c11 as int))>"];
    36 -> 37 [label="<p12 = plus_ptr(p9, (((c11 as int) * (c7 as int)) * (2 as int)))>"];
    37 -> 38 [label="<update p9 = p12>"];
    38 -> 30 [label="<redir>"];
    39 -> 40 [label="<p1 = new_c_string(c0)>"];
    40 -> 41 [label="<p2 = malloc()>"];
    41 -> 42 [label="<p3 = op_test_file(p1, p2)>"];
    42 -> 43 [label="<b4 = is_null_ptr(p3)>"];
    43 -> 44 [label="<if !b4>"];
    44 -> 45 [label="<c5 = op_test_open(p3)>"];
    45 -> 46 [label="<b6 = c5 == 0>"];
    46 -> 47 [label="<assert b6>"];
    47 -> 48 [label="<i7 = op_pcm_total(p3, -1)>"];
    47 -> 78 [label="<c7 = op_link_count(p3)>"];
    48 -> 49 [label="<c8 = op_channel_count(p3, -1)>"];
    49 -> 50 [label="<update i9 = (((i7 * (c8 as int)) * 2) as int)>"];
    50 -> 51 [label="<p10 = malloc_bytes(i9)>"];
    51 -> 52 [label="<update i11 = 0>"];
    52 -> 53 [label="<if (i11 == i7)>"];
    52 -> 54 [label="<if !(i11 == i7)>"];
    53 -> 55 [label="<c12 = op_read(p3, p10, ((i7 * (c8 as int)) as int), NULL)>"];
    54 -> 56 [label="<u14 = op_free(p3)>"];
    55 -> 57 [label="<if (c12 >= 0)>"];
    57 -> 58 [label="<update i11 = (i11 + (c12 as int))>"];
    58 -> 59 [label="<p13 = plus_ptr(p10, (((c12 as int) * (c8 as int)) * (2 as int)))>"];
    59 -> 60 [label="<update p10 = p13>"];
    60 -> 52 [label="<redir>"];
    61 -> 62 [label="<update c7 = -1>"];
    62 -> 63 [label="<i8 = op_pcm_total(p4, c7)>"];
    63 -> 64 [label="<i9 = op_raw_total(p4, c7)>"];
    64 -> 65 [label="<i10 = op_pcm_tell(p4)>"];
    65 -> 66 [label="<i11 = op_raw_tell(p4)>"];
    66 -> 67 [label="<p12 = malloc_bytes(23040)>"];
    67 -> 68 [label="<if True>"];
    67 -> 69 [label="<if !True>"];
    68 -> 70 [label="<c13 = op_read_stereo(p4, p12, 11520)>"];
    70 -> 71 [label="<if (c13 > 0)>"];
    71 -> 72 [label="<c14 = op_current_link(p4)>"];
    72 -> 73 [label="<i15 = op_pcm_total(p4, c14)>"];
    73 -> 74 [label="<i16 = op_raw_total(p4, c14)>"];
    74 -> 75 [label="<i17 = op_pcm_tell(p4)>"];
    75 -> 76 [label="<i18 = op_raw_tell(p4)>"];
    76 -> 77 [label="<p19 = op_tags(p4, c14)>"];
    77 -> 67 [label="<redir>"];
    78 -> 79 [label="<update c8 = -1>"];
    79 -> 80 [label="<i9 = op_pcm_total(p3, c8)>"];
    80 -> 81 [label="<i10 = op_raw_total(p3, c8)>"];
    81 -> 82 [label="<i11 = op_pcm_tell(p3)>"];
    82 -> 83 [label="<i12 = op_raw_tell(p3)>"];
    83 -> 84 [label="<p13 = malloc_bytes(23040)>"];
    84 -> 85 [label="<if True>"];
    84 -> 86 [label="<if !True>"];
    85 -> 87 [label="<c14 = op_read_stereo(p3, p13, 11520)>"];
    87 -> 88 [label="<if (c14 > 0)>"];
    88 -> 89 [label="<c15 = op_current_link(p3)>"];
    89 -> 90 [label="<i16 = op_pcm_total(p3, c15)>"];
    90 -> 91 [label="<i17 = op_raw_total(p3, c15)>"];
    91 -> 92 [label="<i18 = op_pcm_tell(p3)>"];
    92 -> 93 [label="<i19 = op_raw_tell(p3)>"];
    93 -> 94 [label="<p20 = op_tags(p3, c15)>"];
    94 -> 84 [label="<redir>"];
}
